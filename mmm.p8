pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--constants
g_state_spawn = 1
g_state_run = 2
g_state_dead = 3

--globals
g_frame = 0
g_frame_ref = 0
g_state = g_state_run

--enemies
enemy_skull = 64

--tiles
tile_exit = 51

--player
p = {}
p_state_stand = 1
p_state_jump = 2
p_state_run = 3
p_jumpstrength = 10
p_walkspeed = 1

--flags
flag_ground=0
flag_instadeath=1
flag_hurt=2

--melons == bullets
melons = {}
melon_speed = 3
tile_melon = 32

--items
items = {}
item_health1 = 16

--entities
entities = {}
entity_explosion1 = 35

--enemies
enemies = {}
enemy_health = 40

--level
levels = {}
level = 1
-->8
-- native functions
#include utils.lua

--https://www.lexaloffle.com/bbs/?tid=2951
clone=function (o)
 if type(o) == 'table' then
  local c = {}
  for k, v in pairs(o) do
   c[k] = clone(v)   
  end
  return c
 else
  return o
 end
end

function clamp(v, mi, ma)
 if v < mi then return mi end
 if v > ma then return ma end
 return v
end

function _init()
 level = 1
 for y = 0,63 do
  for x = 0,127 do
   local t = mget(x,y)
   if t == p_state_stand then
    mset(x,y,0)
    local l = {}
    
    l.x,l.y = x*8,y*8
    levels[level] = l
    level += 1
   end
   if t == item_health1 then
    mset(x,y,0)
    create_item(t,x*8,y*8)
   end
   if t == enemy_skull then
    mset(x,y,0)
				local e = {}
				e.x,e.y = x*8,y*8
				e.tile = t				
    e.direction = -1
    e.groundlevel = e.y
    e.iframes = 0
    e.health = enemy_health
				add(enemies,e)    
   end
  end
 end
 
 select_level(1)
end

function _update()
 --if (g_frame % 4) != 0 then return end
 
 camera()
 cls(1)
 cursor(11,5)
 btn_update()

 --melon logic
 for m in all(melons) do
  m.x += m.direction * melon_speed
  if abs(p.x - m.x) > 128 then
   del(melons,m)
  end
 end
 
 --item logic
 for i,item in pairs(items) do
  if item.tile == item_health1 then
   if abs(item.x-p.x) <= 4 and abs(item.y-p.y) <= 8 then
    p.health += 20
    del(items, item) 
    sfx(2)
   end
  end
 end
 
 --enemy logic
 for e in all(enemies) do
  enemy_update(e)
 end
 
 --entity logic
 for e in all(entities) do
  entity_update(e)
 end

 if g_state == g_state_run then
	 p.state = p_state_stand 
	 hero_movement()
 end
 if g_state == g_state_dead then
  if frame() == 60 then
   select_level(level)
  end
 end
 
 color(13)
 print(#melons) 
 print(p.groundlevel)
 print(p.x .. " " .. p.y)
 print(p.health)
 print(p.jumpvel)
end

function _draw()
 local camx=p.x - 32
 if camx < 0 then camx=0 end
 camera(camx, 0)

 map(0)

 palt(0, false)
 palt(14, true)
 pal(4,p.color1)
 pal(9,p.color2) 
 hero_draw()
 pal(4,4)
 pal(9,9)
 
 for m in all(melons) do
  spr(tile_melon, m.x, m.y, 1, 1, m.direction == -1)
 end

 for i in all(items) do
  spr(i.tile, i.x, i.y)
 end

 for e in all(enemies) do
  enemy_draw(e)
 end
 
 for e in all(entities) do
  entity_draw(e)
 end
 
 palt(0, true)
 palt(14, false)
 
 --debug
 --pset(p.x, p.y, 8)
 --pset(p.x+7, p.y, 8)
 --pset(p.x, p.y+7, 8)
 --pset(p.x+7, p.y+7, 8)

 camera()

 --ui
 draw_healthbar()

 for i = 1,15 do
  local g = calc_char_groundlevel(p.x,8*i,8)
  --line(0, g, 128, g, i)
 end

 g_frame = g_frame + 1
end

-->8
-- logic
function select_level(l)
 level = l
 p = cstr_player(levels[l].x,levels[l].y)
 g_state = g_state_run
 g_frame = 0
end

function timer_reset()
 g_frame_ref = g_frame
end

function frame()
 return g_frame - g_frame_ref
end

function calc_groundlevel(x,y)
 local tx = flr(x/8)
 local ty = flr(y/8)
 local hero_tile=0
 repeat
  hero_tile = mget(tx,ty)
  if fget(hero_tile, flag_ground) or ty > 128 then
   break
  end  
  ty += 1
 until false
 return (ty-1)*8
end

function calc_char_groundlevel(x,y,w)
 local g0 = calc_groundlevel(x,y)
 local g1 = calc_groundlevel(x-1+w,y)
 return min(g0,g1)
end

function hurt_hero(damage)
 if p.iframes > 0 then return end
 p.stuned = 30
 p.iframes = 60
 p.health -= damage
 p.health = clamp(p.health,0,100)
 if p.health == 0 then
  kill_hero()
 else
  sfx(1)
 end
end

function kill_hero()
 g_state = g_state_dead
 timer_reset()
 
 p.health = 0
 
 for i=1,6 do
		local e = {}
		e.x,e.y = p.x,p.y
		if i==1 then e.velx,e.vely=2,1 end
		if i==2 then e.velx,e.vely=2,-1 end
		if i==3 then e.velx,e.vely=0,2 end
		if i==4 then e.velx,e.vely=0,-2 end
		if i==5 then e.velx,e.vely=-2,1 end
		if i==6 then e.velx,e.vely=-2,-1 end

		e.tile = entity_explosion1
		add(entities,e)  
 end
end

function heal_hero(healing)
 p.health += healing
end
-->8
-- movement functions
function apply_hero_falling()
 if p.y < p.groundlevel then
  p.jumpvel += 0.5
 end

 if p.jumpvel <= 0 then return end

 --print("falling")

 p.y += p.jumpvel
 
 if p.y >= p.groundlevel then
  p.jumpvel = 0
  p.y = p.groundlevel
 end
end

function apply_hero_jumping()
 if p.jumpvel >= 0 then return end

 --print("jumping")
 
 local y = p.y
 
 y += p.jumpvel
 
 if y < p.groundlevel then
  p.jumpvel += 0.5
 else
  p.jumpvel = 0
  y = p.groundlevel
 end 

 local g = calc_char_groundlevel(p.x,y,8)

 if g == p.groundlevel then
  p.y = y
 else
  print("newg " .. g)
  --bonged our head
  --on the ceiling
  --p.jumpvel = 0
  p.y = flr(p.y/8)*8
  --repeat
  -- g0 = calc_groundlevel(p.x,y)
  -- g1 = calc_groundlevel(p.x+7,y)
  -- y += 8
  --until g0 >= p.groundlevel and g1 >= p.groundlevel
  --p.y = y-8
  --p.jumpvel = 0
 end
end

function apply_hero_movement()
 local direction = p.direction
 if p.stuned != 0 then
  direction = -direction / 2
 else
  direction *= p_walkspeed
 end
 if p.state == p_state_stand and p.stuned == 0 then return end
 local x1 = p.x
 x1 += direction  

 if x1 < 0 then return end

 local tl = mget(x1/8,p.y/8)
 if fget(tl, flag_ground) then return end

 local tr = mget((x1+7)/8,p.y/8)
 if fget(tr, flag_ground) then return end

 p.x = x1
end

function check_hero_touch(x,y)
 local t = mget(x/8,y/8)
 
 if p.iframes == 0 and fget(t, flag_instadeath) then
  --kill_hero()
 end
 if p.iframes == 0 and fget(t, flag_hurt) then
  hurt_hero(20)
 end
end

function hero_movement()
 p.groundlevel = calc_char_groundlevel(p.x,p.y,8)

 if p.health == 0 then return end
 --walking 
 if btn(‚¨ÖÔ∏è) and p.stuned == 0 then 
  p.state = p_state_run
  p.direction = -1
 end 
 if btn(‚û°Ô∏è) and p.stuned == 0 then 
  p.state = p_state_run
  p.direction = 1
 end  
 if btnd(üÖæÔ∏è) and p.y == p.groundlevel and p.stuned == 0 then
  p.jumpvel = -p_jumpstrength
 end 

 local oldx = p.x
 apply_hero_falling()
 apply_hero_jumping()
 apply_hero_movement()

 if oldx == p.x then
  p.state = p_state_stand
 end
 
 if p.iframes > 0 then p.iframes -= 1 end
 if p.stuned > 0 then p.stuned -= 1 end
 
 if p.state != p_state_jump then 
  check_hero_touch(p.x,p.y+8)
  check_hero_touch(p.x+8,p.y+8)
  check_hero_touch(p.x,p.y)
  check_hero_touch(p.x+7,p.y)
 end
 
 check_spikes()
 
 --shootng
 if btnd(‚ùé) then
  local melon = {x=p.x, y=p.y}
  melon.direction = p.direction
  melon.player = true
  add(melons, melon)
  sfx(0)
 end
end

function check_spikes()
	local check_hero_touch=function(x,y)
	 local t = mget(x/8,y/8)
	 
	 if fget(t, flag_instadeath) then
	  kill_hero()
	 end
	end

 if p.state != p_state_jump then 
  check_hero_touch(p.x,p.y)
  check_hero_touch(p.x+8,p.y)
 end 
end

function enemy_update(e)
  if abs(e.x-p.x) <= 8 and abs(e.y-p.y) <= 8 then
   hurt_hero(9)
  end
  if e.direction == -1 and calc_groundlevel(e.x-1,e.y) != e.groundlevel then
   e.direction = -e.direction
  end
  if e.direction == 1 and calc_groundlevel(e.x+8,e.y) != e.groundlevel then
   e.direction = -e.direction
  end
  e.x += e.direction
  
  if e.iframes == 0 then
	  for m in all(melons) do
	   if abs(e.x-m.x) < 6 and abs(e.y-m.y) < 8 then
	    e.health -= 20
	    e.iframes = 10
	    del(melons,m)
	   end
	  end
	 else
	  e.iframes -= 1
  end
  if e.health <= 0 then
   --spawn healh
   create_item(item_health1,e.x,e.y)
   del(enemies, e)
  end
end

function entity_update(e)
 if e.velx and e.vely then
  e.x += e.velx
  e.y += e.vely
 end
end

function create_item(t, x, y)
 local i = {}
 i.x,i.y = x,y
 i.tile = t
 add(items,i)
end

-->8
-- draw functions
function hero_draw()
 if p.health == 0 then return end
 if p.iframes > 0 and (g_frame % 2) == 0 then
  return
 end

 local p_frame = p.state
 if p_frame == p_state_run and g_frame % 20 < 10 then
  p_frame = p_frame + 1
 end
 
 if p.y != p.groundlevel then
  p_frame = p_state_jump
 end
 
 if btn(‚ùé) then
  p_frame += 16
 end

 if p.stuned > 0 then
  p_frame = 34
 end

 --draw player 
 spr(p_frame, p.x, p.y, 1, 1, p.direction == -1) 
end

function draw_healthbar()
 local h = 20
 for y=0,h do
  local c
  if (h * (p.health / 100.0))<y then c=0 else c=6 end
  if c == 6 and y % 2 == 0 then c = 7 end
  line(1,h-y+3,6,h-y+3, c)
 end
end

function enemy_draw(e)
 if e.iframes > 0 and (g_frame % 2) == 0 then return end

 spr(e.tile, e.x, e.y, 1, 1, e.direction == -1)
end

function entity_draw(e)
 if e.tile == entity_explosion1 then
  local tile = e.tile
  local flipt = g_frame % 20 < 10
  if g_frame % 40 < 20 then tile+=1 end

  spr(tile, e.x, e.y, 1, 1, flipt)  
 end
end
-->8
--constructors
function cstr_player(x,y)
 local p = {x=x,y=y}
 p.health = 100
	p.state = p_state_stand
	p.slide_frames = 0
	p.direction = 1
	p.jumpvel = 0
	p.groundlevel = 0
	p.iframes = 0
	p.stuned = 0
	p.color1 = 4
	p.color2 = 9
	p.groundlevel = y
	return p
end
__gfx__
00000000e44444eee44444eee44444eee44444ee0330033003330330033333300330033003300330033303300333333003300330000000000000000000000000
00000000e47171ee4471714ee47171eee47171ee3333333333553333353355533355333333333333335533333533555333553333000000000000000000000000
00700700eeffffee4effff4eeeffffeeeeffff4e3355552352225253522552253525553333555523522252535225522535255533000000000000000000000000
00077000e99ff9eee99f09ee449ffeeee49ff94e3552522522232222532222225222255335525225222322225322222252222553000000000000000000000000
000770004e999e4eee999eee4ee99eeee4e99eee3522522222252222222222222222525005222222222222322222222222222255000000000000000000000000
007007004e444e4eee444eeeeee494eeeee94eee0522222223222222222222222222225005255252522252225222225252222225000000000000000000000000
00000000ee949eeeee94944ee4994eeeee4994ee0522222222222252222223222225225052552555525225255552525555252555000000000000000000000000
00000000e44e44eeee4eeeeee44e44eeee44e44e5522252222222222222222222222222505555550055555500555550000555550000000000000000000000000
eeeeeeeee44444eee44444eee44444eee44444ee5222225222522222522252222222222500000000000000000000000000000000000000000000000000000000
eeeeeeeee47171ee447171eee47171eee47171ee5222222222222322222222222522225500000000000000000000000000000000000000000000000000000000
eeeeeeeeeeffffee4effffeeeeffffeeeeffffee5222222222222222222225222222225000000000000000000000000000000000000000000000000000000000
eeeeeeeee99ff944e99f0944449ff944e49ff9445522222252222222222222222222225500000000000000000000000000000000000000000000000000000000
eee44eee4e999eeeee999eee4ee99eeee4e99eee5525222222222222522222222223222500000000000000000000000000000000000000000000000000000000
ee9999ee4e444eeeee444eeeeee49eeeeee94eee5522232222222252222225222222252500000000000000000000000000000000000000000000000000000000
ee4444eeee949eeeee94944ee4994eeeee4994ee5222222222252222222222222222222500000000000000000000000000000000000000000000000000000000
eee99eeee44e44eeee4eeeeee44e44eeee44e44e5522222222222222232522222252225000000000000000000000000000000000000000000000000000000000
eeeeeeee06667767e44444eeeeeeaaeeeeeeeeee0522222225222252222222222222225000000000000000000000000000000000000000000000000000000000
eeeeeeee76666660e47878eeeeaa9aeeeeeeaaee5522252222222222222222522225255500000000000000000000000000000000000000000000000000000000
eeea9eee06667767eeff0feeaa9999aeeaaa9aee5522222222222222222222222222225500000000000000000000000000000000000000000000000000000000
eeaa99ee76666660e99f09ee999999aee9999aee5222222232225222222522222222222500000000000000000000000000000000000000000000000000000000
eeeaaeee066677674e999e4ee9999999ee99999e5222252222222225222222225232222500000000000000000000000000000000000000000000000000000000
eeeeeeee766666604e444e4ee9999999ee99999e5522222222222222222222222222222500000000000000000000000000000000000000000000000000000000
eeeeeeee06667767ee949eeeee9999eeee99eeee5225222225222252222322222222522500000000000000000000000000000000000000000000000000000000
eeeeeeee76666660e44e44eeee99eeeeeeeeeeee0522252222222222222222225222225000000000000000000000000000000000000000000000000000000000
0000000008800080eeee4eeeaa990aa0000000000522222222222252222225222222225000000000000000000000000000000000000000000000000000000000
0000000088888888eee94eeea0909a0a000000005522222552252252222222222222255000000000000000000000000000000000000000000000000000000000
0000000089888888ee4944eeaa909a0a000000005222322222222222252222252252225500000000000000000000000000000000000000000000000000000000
0000000088889889ee4944eea0909a0a000000005252222222222222222222222222232500000000000000000000000000000000000000000000000000000000
0000000088988888ee4444eeaa909aaa000000000522222222222232222222222222225500000000000000000000000000000000000000000000000000000000
0000000088988988ee4494ee77777777000000000525525252225222522222525222222500000000000000000000000000000000000000000000000000000000
0000000089888989eee49eee00000770000000005255255552522525555252555525255500000000000000000000000000000000000000000000000000000000
0000000089889898eee4eeee00000700000000000555555005555550055555000055555000000000000000000000000000000000000000000000000000000000
eeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e44444eeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e477774ee6eaea6e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e779797eee6666ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e777777eee6666ee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e777777ee6eaea6e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ee7000eeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
eee777eeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000010101010101010100000000000000000101010100000000000000000300000001010101000000000000000004000000010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000506070706070800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000001000211516262627262800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000508000005062616161626261727070c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000035370c003537373637373737373638000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000050800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000000000000000000000009373800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0507060800000508000005080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2516161800002528000025180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1516161800001518000015180000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2516161821212528313125180000000000000000000040000000050800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2516261616161616070617160607060606070607060607070606161706070707060706070607000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1616161616161616161617172626262617172626171717261717261727261727171717171717000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000f150131501415015150171501b1501e15015150101500f1500e1500e1500f1500f150101501415017150191501015000550005500055000550005500055000550005500055000550005500055000550
00020000336502f6502c6502965026650236501c650136500c6501165010650126500d6500c6500b6500a6500b6500a6500000000000000000000000000000000000000000000000000000000000000000000000
000100000c15011150141501615018150181501815014150101500615002150001502c00028000260000000003000040000200001000000000000000000000000000000000000000000000000000000000000000
