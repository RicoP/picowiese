var fs = require('fs');

Array.prototype.last = function() { let x = this.pop(); this.push(x); return x }

var text = fs.readFileSync(process.argv[2], "utf8");
var filename = process.argv[2].split("\\").last().split(".")[0];

var lines = text.split("\n");

var tris = [];
var faces = [];

for(let i = 0; i != lines.length; ++i) {
	var line = lines[i]
	//console.log(line);
	if(line.startsWith("v ")) {
		//v 1.000000 1.000000 -1.000000
		line = line.substr(2);
		let vert = line.split(" ").map(s => Number(s));
		tris.push(vert);		
	}
	if(line.startsWith("f ")) {
		//f 5/1/1 3/2/1 1/3/1
		line = line.substr(2);
		let face = line.split(" ").map(s => Number(s.split("\/")[0]));
		faces.push(face);				
	}
}

var filecontent = ""

function print(s) {
	filecontent += s;
}

function printLine(s) {
	print(s);
	filecontent += "\n";
}

print("--autogenerated ");
printLine(filename);

print(filename);
printLine("_mesh = {")
printLine(" vert = {")
for(let v = 0; v != tris.length; ++v) {
	print( tris[v].join(",") )
	if(v != tris.length -1) print(",");
	printLine("");
}
printLine(" },")

printLine(" faces = {")
for(let f = 0; f != faces.length; ++f) {
	print( faces[f].join(",") )
	if(f != faces.length -1) print(",");
	printLine("");
}
printLine(" }")

/*for(let i = 0; i != faces.length; ++i) {
	let face = faces[i];
	print("  triangle({")
	for(let f = 0; f != face.length; ++f) {
		let vi = face[f]-1;
		print("vec3d(");
		print(tris[vi].join(","));
		print(")");
		if(f < 2) print(", ");
	}
	print("})");
	if(i < faces.length-1) {
		print(",");
	}
	printLine("");
}*/
printLine("}")


fs.writeFileSync(filename + ".lua", filecontent);
